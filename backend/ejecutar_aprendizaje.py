import sys
import os
sys.path.append(os.path.dirname(__file__))

from main import update_signals_resultado_real, optimize_all_horizons
from services.learning_service import load_weights, optimize_weights

def ejecutar_aprendizaje():
    """Ejecuta el proceso de aprendizaje completo"""
    
    print("ü§ñ Iniciando proceso de aprendizaje...")
    
    # 1. Calcular resultados reales de las se√±ales existentes
    print("üìä Calculando resultados reales de se√±ales...")
    try:
        update_signals_resultado_real()
        print("‚úÖ Resultados reales calculados")
    except Exception as e:
        print(f"‚ùå Error calculando resultados: {e}")
    
    # 2. Verificar pesos actuales
    print("‚öñÔ∏è Verificando pesos actuales...")
    try:
        weights = load_weights()
        print("Pesos actuales:", weights)
    except Exception as e:
        print(f"‚ùå Error cargando pesos: {e}")
    
    # 3. Ejecutar optimizaci√≥n
    print("üîß Ejecutando optimizaci√≥n de pesos...")
    try:
        optimize_all_horizons()
        print("‚úÖ Optimizaci√≥n completada")
    except Exception as e:
        print(f"‚ùå Error en optimizaci√≥n: {e}")
    
    # 4. Verificar nuevos pesos
    print("‚öñÔ∏è Verificando nuevos pesos...")
    try:
        new_weights = load_weights()
        print("Nuevos pesos:", new_weights)
    except Exception as e:
        print(f"‚ùå Error cargando nuevos pesos: {e}")

if __name__ == "__main__":
    ejecutar_aprendizaje() 